apiVersion: apps/v1
kind: Deployment
metadata:
    name: db
spec:
    replicas: {{ .Values.db.replicas }}
    strategy:
        type: Recreate
    selector:
        matchLabels:
            service: diov-db
    template:
        metadata:
            labels:
                service: diov-db
        spec:
            securityContext:
                runAsUser: 10001
                fsGroup: 0
            terminationGracePeriodSeconds: 10
            containers:
              - name: db
                image: {{ .Values.db.image | quote }}
                ports:
                  - name: db
                    containerPort: 1433
                env:
                  - name: MSSQL_PID
                    value: Developer
                  - name: ACCEPT_EULA
                    value: "Y"
                  - name: MSSQL_SA_PASSWORD
                    value: {{ .Values.db.saPassword | quote }}
                volumeMounts:
                  - name: db
                    mountPath: /var/opt/mssql
                resources:
                    limits:
                        cpu: {{ .Values.db.cpu }}
                        memory: {{ .Values.db.memory }}
                    requests:
                        cpu: 250m
                        memory: 1Gi
            volumes:
              - name: db
                persistentVolumeClaim:
                    claimName: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: redis
spec:
    replicas: {{ .Values.redis.replicas }}
    strategy:
        type: Recreate
    selector:
        matchLabels:
            service: diov-redis
    template:
        metadata:
            labels:
                service: diov-redis
        spec:
            containers:
              - name: redis
                image: {{ .Values.redis.image | quote }}
                ports:
                  - containerPort: 6379
                volumeMounts:
                  - mountPath: /data
                    name: redis
                resources:
                    limits:
                        cpu: {{ .Values.redis.cpu }}
                        memory: {{ .Values.redis.memory }}
                    requests:
                        cpu: 250m
                        memory: 1Gi
            volumes:
              - name: redis
                persistentVolumeClaim:
                    claimName: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: web
spec:
    replicas: {{ .Values.web.replicas }}
    selector:
        matchLabels:
            service: diov-web
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            labels:
                service: diov-web
        spec:
            containers:
              - image: {{ .Values.web.image | quote }}
                name: web
                ports:
                  - name: http
                    containerPort: 80
                    protocol: TCP
                env:
                  - name: ASPNETCORE_ENVIRONMENT
                    value: Production
                  - name: ConnectionStrings__Redis
                    value: redis
                  - name: ConnectionStrings__Sql
                    value: Server=db;Database=Diov;User Id={{ .Values.web.db.userId }};Password={{ .Values.web.db.password }};
                  - name: ExternalAuthentication__Google__AdminAuthorization
                    value: {{ .Values.web.externalIdentityProviders.google.adminAuthorization | quote }}
                  - name: ExternalAuthentication__Google__ClientId
                    value: {{ .Values.web.externalIdentityProviders.google.clientId | quote }}
                  - name: ExternalAuthentication__Google__ClientSecret
                    value: {{ .Values.web.externalIdentityProviders.google.clientSecret | quote }}
                  - name: Serilog__MinimumLevel
                    value: Warning
                volumeMounts:
                  - name: media
                    mountPath: /app/wwwroot/media
                    readOnly: true
                resources:
                    limits:
                        cpu: {{ .Values.web.cpu }}
                        memory: {{ .Values.web.memory }}
                    requests:
                        cpu: 100m
                        memory: 1Gi
                livenessProbe:
                    httpGet:
                        path: /health/live
                        port: http
                    periodSeconds: 15
                    timeoutSeconds: 5
                readinessProbe:
                    httpGet:
                        path: /health/ready
                        port: http
                    periodSeconds: 60
                    timeoutSeconds: 15
                startupProbe:
                    httpGet:
                        path: /health/ready
                        port: http
                    failureThreshold: 10
                    periodSeconds: 5
            restartPolicy: Always
            volumes:
              - name: media
                persistentVolumeClaim:
                    claimName: media
